name: "Setup Environment"
description: "Sets up build environment for specified framework with platform selection"
inputs:
  framework:
    description: "Target framework (glfw, android, macos, ios)"
    required: true
  os:
    description: "Operating system"
    required: true
runs:
  using: "composite"
  steps:
    - name: Cache Prerequisites (All Platforms)
      uses: actions/cache@v4
      with:
        path: |
          ./build_cache
        key: ${{ inputs.os }}-${{ inputs.framework }}-build_cache-${{ hashFiles('./build_system/prerequisites.py') }}}
        restore-keys: |
          ${{ inputs.os }}-${{ inputs.framework }}-build_cache-

    - name: Cache Gradle packages (Android)
      if: inputs.framework == 'android'
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ./build_system/android/.gradle
          ./build_system/android/app/build
          ./build_system/android/build
        key: ${{ inputs.os }}-android-gradle-${{ hashFiles('./build_system/android/**/*.gradle', './build_system/android/**/gradle.properties', './build_system/android/gradle/wrapper/gradle-wrapper.properties') }}}
        restore-keys: |
          ${{ inputs.os }}-android-gradle-

    - name: Setup GLFW Environment (All Platforms)
      if: inputs.framework == 'glfw'
      uses: aminya/setup-cpp@v1
      with:
        compiler: llvm
        vcvarsall: ${{ contains(inputs.os, 'windows') }}
        cmake: true
        ninja: true
        ccache: true

    - name: Install GLFW dependencies (macOS)
      if: inputs.framework == 'glfw' && contains(inputs.os, 'macos')
      run: brew install glfw
      shell: bash

    - name: Set up JDK 17 (Android)
      if: inputs.framework == 'android'
      uses: actions/setup-java@v3
      with:
        java-version: "17"
        distribution: "temurin"

    - name: Setup Android SDK (Android)
      if: inputs.framework == 'android'
      uses: android-actions/setup-android@v3

    - name: Setup Xcode (macOS/iOS)
      if: inputs.framework == 'macos' || inputs.framework == 'ios'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
